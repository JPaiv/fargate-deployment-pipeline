name: deploy-application-infrastrucsture

on:
  push:
    branches:
      - main

env:
  region: eu-west-1
  TF_VAR_default_region: eu-west-1
  TF_VAR_environment: test
  TF_VAR_ecr_repo: -container-repo

jobs:
  build-application:
    name: "Deploy application container."
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./src
    permissions:
      contents: 'read'
      id-token: 'write'
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.region }}

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1

      - name: Build, tag, and push image to Amazon ECR
        env:
          ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          ECR_REPOSITORY: '${{ env.TF_VAR_environment }}{{ env.TF_VAR_ecr_repo }}'
          IMAGE_TAG: ${{ github.sha }}
        run: |
          docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG .
          docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG

  terraform-deploy-application:
    runs-on: ubuntu-latest
    defaults:
      run:        
        working-directory: ./infra/deployment/test
    steps:
      - uses: actions/checkout@v2

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.region }}
  
      - name: Terraform Init
        id: init
        run: terraform init

      # Add just in case there is a locked state
      # - name: 'Unlock terraform state'
      #   run: terraform force-unlock -force <lock_id>
          
      - name: Terraform Plan
        id: plan
        if: github.event_name == 'pull_request'
        run: terraform plan -no-color
        # continue-on-error: false

      - name: Terraform Plan Status
        if: steps.plan.outcome == 'failure'
        run: exit 1

      - name: Terraform Apply
        if: github.ref == 'refs/heads/main' && github.event_name == 'push' 
        run: terraform apply -auto-approve
